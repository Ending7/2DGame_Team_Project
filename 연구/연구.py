# handle 보면 events를 for문돌려서 event를 하나씩 빼오고 있는데, 방향키 두개를 누르면 동시에 실행을 못한다.
# 예를들어 왼쪽 오른쪽 동시에 누르면 고장나고, 왼쪽 방향키를 떼면 left up 되어서 idle로 넘어가고
# 다시 run으로 갔다가 idle로 갔다가 반복한다.(transition에서 그렇게 설정함.)
# 다른 방향키를 마저 떼게 되면 right up이 실행되고, 그 때 실행되도록 설정한 x값이 idle, run을 왔다갔다 하면서 반복 실행하게 될 것이다.
# 결론을 말하면 마지막에 누른 값만이 실행 되는데 위 아래로 움직이고 싶으면 event 받아오는 코드를 수정하든지 아니면 적절한 변수를 만들어서
# 모든 방향키 값에 대해 통제하는 수 밖에 없다.

# 가설인데 오른쪽 키를 누르면 x = 1방향으로 나아가는데 왼쪽키를 누르면 x = -1방향으로 나아가게 되고
# run에서 x로 한칸 움직인 뒤 왼쪽키 이벤트가 또 실행되는 바람에 다시 -1로 한칸 움직여서 0이 되는게 아닌가 싶었는데..
# 실험해보니 아니였다. 그렇다면 handle에서 받아올 때 여러개를 한번에 배열로 넘겨서 배열에 있는 값들을 일일이 오픈해서
# 경우의 수를 따져봐야 하는데 그렇게 할 바에 그냥 모든 방향키에 값을 줘서 통제하는 방식이 나을 것 같다.

# 위에 적은 소리 다 개소리다. 연구하다보니 왜 오류가 난지 알게 되었다. left up 되서 idle로 넘어간게 아니다. 밑에서 그 과정을 설명한다.
# 위에 적은 소리 다 개소리다. 연구하다보니 왜 오류가 난지 알게 되었다. left up 되서 idle로 넘어간게 아니다. 밑에서 그 과정을 설명한다.
# 위에 적은 소리 다 개소리다. 연구하다보니 왜 오류가 난지 알게 되었다. left up 되서 idle로 넘어간게 아니다. 밑에서 그 과정을 설명한다.

# [!!!!연구해 본 결과 반복 실행이 아니라 키를 눌렀을 때 idle로 한번 이동하고 뗏을 때 run으로 한번 이동한다!!!! 누를 때 한번 이동 후
# 그 값을 고정으로 계속 update, render 해주는 것이다!!]
# 이 사실을 잘 이해하고 있다면 위에 적은 글에서 왜 실행이 안되는지를 파악할 수 있다.
# 실험해 본 결과 두개를 동시에 누르면, 새로 누를 값은 전혀 영향이 없다.
# 왜 그러냐하면 run일 때 키보드를 누르면 idle로 가도록 만들어 놨기 때문이다.

# 결론...
# run일 때 새로운 값을 받으면 run을 다시 실행시켜서 새로운 값으로 바꿔주고 싶은건데 계속 idle로 넘어가고 있었다 ㅡㅡ..
# idle에서는 아무런 처리도 안해주고 있었기 때문에 캐릭터가 멈춰버린거고.
# 계속 달리게 하고 싶으면 run에서 run으로 가도록 만들어야 한다.
# 혹은 idle에서 적절한 처리를 해주면 될 것 같은데 될 것 같은것 뿐이지 되지 않는다. 여러개를 동시에 눌렀을 때 처리를 못해주기 때문이다.
